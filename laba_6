import timeit

def recursive_f(n):
    if n == 1:
        return 2
    if n == 2:
        return 4
    return (-1) ** n * (recursive_f(n - 1) - recursive_f(n - 2)) / (3 * n)

def iterative_f(n):
    if n == 1:
        return 2
    if n == 2:
        return 4
    a, b = 2, 4  # F(1) и F(2)
    for i in range(3, n + 1):
        a, b = b, (-1) ** i * (b - a) / (3 * i)
    return b

def compare_with_timeit(max_n=15, repeats=1000):
    print("n\tРекурсия (мс)\tИтерация (мс)")
    print("----------------------------------")

    for n in range(1, max_n + 1):
        # Измеряем рекурсивный метод
        rec_time = timeit.timeit(lambda: recursive_f(n), number=repeats) * 1000 / repeats
        # Измеряем итерационный метод
        iter_time = timeit.timeit(lambda: iterative_f(n), number=repeats) * 1000 / repeats

        print(f"{n}\t{rec_time:.4f}\t\t{iter_time:.4f}")

compare_with_timeit()
